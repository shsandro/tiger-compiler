Grammar

    0 $accept: program $end

    1 program: exp

    2 decs: dec decs
    3     | dec

    4 dec: tydecs
    5    | vardec
    6    | fundecs

    7 tydec: TYPE ID EQ ty

    8 tydecs: tydec
    9       | tydec tydecs

   10 ty: ID
   11   | LBRACE tyfields RBRACE
   12   | ARRAY OF ID

   13 tyfields: %empty
   14         | ID COLON ID
   15         | ID COLON ID COMMA tyfields

   16 vardec: VAR ID ASSIGN exp
   17       | VAR ID COLON ID ASSIGN exp

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   19       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   20 fundecs: fundec
   21        | fundec fundecs

   22 lvalue: ID
   23       | lvalue DOT ID
   24       | ID LBRACK exp RBRACK
   25       | lvalue DOT ID LBRACK exp RBRACK

   26 exp: lvalue
   27    | BREAK
   28    | NIL
   29    | LPAREN explist RPAREN
   30    | INT
   31    | FLOAT
   32    | STRING
   33    | ID LPAREN paras RPAREN

   34 paras: %empty
   35      | exp
   36      | exp COMMA paras

   37 exp: exp PLUS exp
   38    | exp MINUS exp
   39    | exp TIMES exp
   40    | exp DIVIDE exp
   41    | MINUS exp
   42    | exp EQ exp
   43    | exp NEQ exp
   44    | exp GT exp
   45    | exp LT exp
   46    | exp GE exp
   47    | exp LE exp
   48    | exp AND exp
   49    | exp OR exp
   50    | ID LBRACE efields RBRACE

   51 efields: %empty
   52        | ID EQ exp
   53        | ID EQ exp COMMA efields

   54 exp: ID LBRACK exp RBRACK OF exp
   55    | IF exp THEN exp ELSE exp
   56    | IF exp THEN exp
   57    | lvalue ASSIGN exp
   58    | WHILE exp DO exp
   59    | FOR ID ASSIGN exp TO exp DO exp
   60    | LET decs IN explist END

   61 explist: %empty
   62        | exp
   63        | exp SEMICOLON explist


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sval> (258) 7 10 12 14 15 16 17 18 19 22 23 24 25 33 50 52 53 54 59
    STRING <sval> (259) 32
    INT <ival> (260) 30
    FLOAT <fval> (261) 31
    COMMA (262) 15 36 53
    COLON (263) 14 15 17 19
    SEMICOLON (264) 63
    LPAREN (265) 18 19 29 33
    RPAREN (266) 18 19 29 33
    LBRACK (267) 24 25 54
    RBRACK (268) 24 25 54
    LBRACE (269) 11 50
    RBRACE (270) 11 50
    DOT (271) 23 25
    PLUS (272) 37
    MINUS (273) 38 41
    TIMES (274) 39
    DIVIDE (275) 40
    EQ (276) 7 18 19 42 52 53
    NEQ (277) 43
    LT (278) 45
    LE (279) 47
    GT (280) 44
    GE (281) 46
    AND (282) 48
    OR (283) 49
    ASSIGN (284) 16 17 57 59
    ARRAY (285) 12
    IF (286) 55 56
    THEN (287) 55 56
    ELSE (288) 55
    WHILE (289) 58
    FOR (290) 59
    TO (291) 59
    DO (292) 58 59
    LET (293) 60
    IN (294) 60
    END (295) 60
    OF (296) 12 54
    BREAK (297) 27
    NIL (298) 28
    FUNCTION (299) 18 19
    VAR (300) 16 17
    TYPE (301) 7
    LOW (302)
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program <exp> (50)
        on left: 1
        on right: 0
    decs <decs> (51)
        on left: 2 3
        on right: 2 60
    dec <dec> (52)
        on left: 4 5 6
        on right: 2 3
    tydec <namety> (53)
        on left: 7
        on right: 8 9
    tydecs <nametys> (54)
        on left: 8 9
        on right: 4 9
    ty <ty> (55)
        on left: 10 11 12
        on right: 7
    tyfields <fields> (56)
        on left: 13 14 15
        on right: 11 15 18 19
    vardec <dec> (57)
        on left: 16 17
        on right: 5
    fundec <fundec> (58)
        on left: 18 19
        on right: 20 21
    fundecs <fundecs> (59)
        on left: 20 21
        on right: 6 21
    lvalue <var> (60)
        on left: 22 23 24 25
        on right: 23 25 26 57
    exp <exp> (61)
        on left: 26 27 28 29 30 31 32 33 37 38 39 40 41 42 43 44 45 46 47 48 49 50 54 55 56 57 58 59 60
        on right: 1 16 17 18 19 24 25 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 52 53 54 55 56 57 58 59 62 63
    paras <exps> (62)
        on left: 34 35 36
        on right: 33 36
    efields <efields> (63)
        on left: 51 52 53
        on right: 50 53
    explist <exps> (64)
        on left: 61 62 63
        on right: 29 60 63


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    program  go to state 13
    lvalue   go to state 14
    exp      go to state 15


State 1

   22 lvalue: ID .
   24       | ID . LBRACK exp RBRACK
   33 exp: ID . LPAREN paras RPAREN
   50    | ID . LBRACE efields RBRACE
   54    | ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 16
    LBRACK  shift, and go to state 17
    LBRACE  shift, and go to state 18

    $default  reduce using rule 22 (lvalue)


State 2

   32 exp: STRING .

    $default  reduce using rule 32 (exp)


State 3

   30 exp: INT .

    $default  reduce using rule 30 (exp)


State 4

   31 exp: FLOAT .

    $default  reduce using rule 31 (exp)


State 5

   29 exp: LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 61 (explist)

    lvalue   go to state 14
    exp      go to state 19
    explist  go to state 20


State 6

   41 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 21


State 7

   55 exp: IF . exp THEN exp ELSE exp
   56    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 22


State 8

   58 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 23


State 9

   59 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 24


State 10

   60 exp: LET . decs IN explist END

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    decs     go to state 28
    dec      go to state 29
    tydec    go to state 30
    tydecs   go to state 31
    vardec   go to state 32
    fundec   go to state 33
    fundecs  go to state 34


State 11

   27 exp: BREAK .

    $default  reduce using rule 27 (exp)


State 12

   28 exp: NIL .

    $default  reduce using rule 28 (exp)


State 13

    0 $accept: program . $end

    $end  shift, and go to state 35


State 14

   23 lvalue: lvalue . DOT ID
   25       | lvalue . DOT ID LBRACK exp RBRACK
   26 exp: lvalue .
   57    | lvalue . ASSIGN exp

    DOT     shift, and go to state 36
    ASSIGN  shift, and go to state 37

    $default  reduce using rule 26 (exp)


State 15

    1 program: exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 1 (program)


State 16

   33 exp: ID LPAREN . paras RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 34 (paras)

    lvalue  go to state 14
    exp     go to state 50
    paras   go to state 51


State 17

   24 lvalue: ID LBRACK . exp RBRACK
   54 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 52


State 18

   50 exp: ID LBRACE . efields RBRACE

    ID  shift, and go to state 53

    $default  reduce using rule 51 (efields)

    efields  go to state 54


State 19

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   62 explist: exp .
   63        | exp . SEMICOLON explist

    SEMICOLON  shift, and go to state 55
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49

    $default  reduce using rule 62 (explist)


State 20

   29 exp: LPAREN explist . RPAREN

    RPAREN  shift, and go to state 56


State 21

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | MINUS exp .
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    $default  reduce using rule 41 (exp)


State 22

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   55    | IF exp . THEN exp ELSE exp
   56    | IF exp . THEN exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    THEN    shift, and go to state 57


State 23

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   58    | WHILE exp . DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 58


State 24

   59 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 59


State 25

   18 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   19       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 60


State 26

   16 vardec: VAR . ID ASSIGN exp
   17       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 61


State 27

    7 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 62


State 28

   60 exp: LET decs . IN explist END

    IN  shift, and go to state 63


State 29

    2 decs: dec . decs
    3     | dec .

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    $default  reduce using rule 3 (decs)

    decs     go to state 64
    dec      go to state 29
    tydec    go to state 30
    tydecs   go to state 31
    vardec   go to state 32
    fundec   go to state 33
    fundecs  go to state 34


State 30

    8 tydecs: tydec .
    9       | tydec . tydecs

    TYPE  shift, and go to state 27

    $default  reduce using rule 8 (tydecs)

    tydec   go to state 30
    tydecs  go to state 65


State 31

    4 dec: tydecs .

    $default  reduce using rule 4 (dec)


State 32

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


State 33

   20 fundecs: fundec .
   21        | fundec . fundecs

    FUNCTION  shift, and go to state 25

    $default  reduce using rule 20 (fundecs)

    fundec   go to state 33
    fundecs  go to state 66


State 34

    6 dec: fundecs .

    $default  reduce using rule 6 (dec)


State 35

    0 $accept: program $end .

    $default  accept


State 36

   23 lvalue: lvalue DOT . ID
   25       | lvalue DOT . ID LBRACK exp RBRACK

    ID  shift, and go to state 67


State 37

   57 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 68


State 38

   37 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 69


State 39

   38 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 70


State 40

   39 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 71


State 41

   40 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 72


State 42

   42 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 73


State 43

   43 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 74


State 44

   45 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 75


State 45

   47 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 76


State 46

   44 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 77


State 47

   46 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 78


State 48

   48 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 79


State 49

   49 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 80


State 50

   35 paras: exp .
   36      | exp . COMMA paras
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    COMMA   shift, and go to state 81
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 35 (paras)


State 51

   33 exp: ID LPAREN paras . RPAREN

    RPAREN  shift, and go to state 82


State 52

   24 lvalue: ID LBRACK exp . RBRACK
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   54    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 83
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


State 53

   52 efields: ID . EQ exp
   53        | ID . EQ exp COMMA efields

    EQ  shift, and go to state 84


State 54

   50 exp: ID LBRACE efields . RBRACE

    RBRACE  shift, and go to state 85


State 55

   63 explist: exp SEMICOLON . explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 61 (explist)

    lvalue   go to state 14
    exp      go to state 19
    explist  go to state 86


State 56

   29 exp: LPAREN explist RPAREN .

    $default  reduce using rule 29 (exp)


State 57

   55 exp: IF exp THEN . exp ELSE exp
   56    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 87


State 58

   58 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 88


State 59

   59 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 89


State 60

   18 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   19       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 90


State 61

   16 vardec: VAR ID . ASSIGN exp
   17       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 91
    ASSIGN  shift, and go to state 92


State 62

    7 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 93


State 63

   60 exp: LET decs IN . explist END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 61 (explist)

    lvalue   go to state 14
    exp      go to state 19
    explist  go to state 94


State 64

    2 decs: dec decs .

    $default  reduce using rule 2 (decs)


State 65

    9 tydecs: tydec tydecs .

    $default  reduce using rule 9 (tydecs)


State 66

   21 fundecs: fundec fundecs .

    $default  reduce using rule 21 (fundecs)


State 67

   23 lvalue: lvalue DOT ID .
   25       | lvalue DOT ID . LBRACK exp RBRACK

    LBRACK  shift, and go to state 95

    $default  reduce using rule 23 (lvalue)


State 68

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   57    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 57 (exp)


State 69

   37 exp: exp . PLUS exp
   37    | exp PLUS exp .
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 37 (exp)


State 70

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   38    | exp MINUS exp .
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 38 (exp)


State 71

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   39    | exp TIMES exp .
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    $default  reduce using rule 39 (exp)


State 72

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   40    | exp DIVIDE exp .
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    $default  reduce using rule 40 (exp)


State 73

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   42    | exp EQ exp .
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 42 (exp)


State 74

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   43    | exp NEQ exp .
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 43 (exp)


State 75

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   45    | exp LT exp .
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 45 (exp)


State 76

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   47    | exp LE exp .
   48    | exp . AND exp
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 47 (exp)


State 77

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   44    | exp GT exp .
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 44 (exp)


State 78

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   46    | exp GE exp .
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 46 (exp)


State 79

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   48    | exp AND exp .
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47

    $default  reduce using rule 48 (exp)


State 80

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   49    | exp OR exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48

    $default  reduce using rule 49 (exp)


State 81

   36 paras: exp COMMA . paras

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 34 (paras)

    lvalue  go to state 14
    exp     go to state 50
    paras   go to state 96


State 82

   33 exp: ID LPAREN paras RPAREN .

    $default  reduce using rule 33 (exp)


State 83

   24 lvalue: ID LBRACK exp RBRACK .
   54 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 97

    $default  reduce using rule 24 (lvalue)


State 84

   52 efields: ID EQ . exp
   53        | ID EQ . exp COMMA efields

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 98


State 85

   50 exp: ID LBRACE efields RBRACE .

    $default  reduce using rule 50 (exp)


State 86

   63 explist: exp SEMICOLON explist .

    $default  reduce using rule 63 (explist)


State 87

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   55    | IF exp THEN exp . ELSE exp
   56    | IF exp THEN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    ELSE    shift, and go to state 99

    $default  reduce using rule 56 (exp)


State 88

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   58    | WHILE exp DO exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 58 (exp)


State 89

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   59    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    TO      shift, and go to state 100


State 90

   18 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   19       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 101

    $default  reduce using rule 13 (tyfields)

    tyfields  go to state 102


State 91

   17 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 103


State 92

   16 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 104


State 93

    7 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 105
    LBRACE  shift, and go to state 106
    ARRAY   shift, and go to state 107

    ty  go to state 108


State 94

   60 exp: LET decs IN explist . END

    END  shift, and go to state 109


State 95

   25 lvalue: lvalue DOT ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 110


State 96

   36 paras: exp COMMA paras .

    $default  reduce using rule 36 (paras)


State 97

   54 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 111


State 98

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   52 efields: ID EQ exp .
   53        | ID EQ exp . COMMA efields

    COMMA   shift, and go to state 112
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 52 (efields)


State 99

   55 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 113


State 100

   59 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 114


State 101

   14 tyfields: ID . COLON ID
   15         | ID . COLON ID COMMA tyfields

    COLON  shift, and go to state 115


State 102

   18 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   19       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 116


State 103

   17 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 117


State 104

   16 vardec: VAR ID ASSIGN exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 16 (vardec)


State 105

   10 ty: ID .

    $default  reduce using rule 10 (ty)


State 106

   11 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 101

    $default  reduce using rule 13 (tyfields)

    tyfields  go to state 118


State 107

   12 ty: ARRAY . OF ID

    OF  shift, and go to state 119


State 108

    7 tydec: TYPE ID EQ ty .

    $default  reduce using rule 7 (tydec)


State 109

   60 exp: LET decs IN explist END .

    $default  reduce using rule 60 (exp)


State 110

   25 lvalue: lvalue DOT ID LBRACK exp . RBRACK
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    RBRACK  shift, and go to state 120
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


State 111

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   54    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 54 (exp)


State 112

   53 efields: ID EQ exp COMMA . efields

    ID  shift, and go to state 53

    $default  reduce using rule 51 (efields)

    efields  go to state 121


State 113

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   55    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 55 (exp)


State 114

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   59    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 122


State 115

   14 tyfields: ID COLON . ID
   15         | ID COLON . ID COMMA tyfields

    ID  shift, and go to state 123


State 116

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   19       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 124
    EQ     shift, and go to state 125


State 117

   17 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 126


State 118

   11 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 127


State 119

   12 ty: ARRAY OF . ID

    ID  shift, and go to state 128


State 120

   25 lvalue: lvalue DOT ID LBRACK exp RBRACK .

    $default  reduce using rule 25 (lvalue)


State 121

   53 efields: ID EQ exp COMMA efields .

    $default  reduce using rule 53 (efields)


State 122

   59 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 129


State 123

   14 tyfields: ID COLON ID .
   15         | ID COLON ID . COMMA tyfields

    COMMA  shift, and go to state 130

    $default  reduce using rule 14 (tyfields)


State 124

   19 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 131


State 125

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 132


State 126

   17 vardec: VAR ID COLON ID ASSIGN exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 17 (vardec)


State 127

   11 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 11 (ty)


State 128

   12 ty: ARRAY OF ID .

    $default  reduce using rule 12 (ty)


State 129

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp
   59    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 59 (exp)


State 130

   15 tyfields: ID COLON ID COMMA . tyfields

    ID  shift, and go to state 101

    $default  reduce using rule 13 (tyfields)

    tyfields  go to state 133


State 131

   19 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 134


State 132

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 18 (fundec)


State 133

   15 tyfields: ID COLON ID COMMA tyfields .

    $default  reduce using rule 15 (tyfields)


State 134

   19 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 135


State 135

   19 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   42    | exp . EQ exp
   43    | exp . NEQ exp
   44    | exp . GT exp
   45    | exp . LT exp
   46    | exp . GE exp
   47    | exp . LE exp
   48    | exp . AND exp
   49    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 19 (fundec)
