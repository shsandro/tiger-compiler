State 16 conflicts: 1 shift/reduce
State 21 conflicts: 1 shift/reduce
State 31 conflicts: 1 shift/reduce
State 34 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 decs: dec decs
    3     | dec

    4 dec: tydecs
    5    | vardec
    6    | fundecs

    7 tydec: TYPE ID EQ ty

    8 tydecs: tydec
    9       | tydec tydecs

   10 ty: ID
   11   | LBRACE tyfields RBRACE
   12   | ARRAY OF ID

   13 tyfields: %empty
   14         | ID COLON ID
   15         | ID COLON ID COMMA tyfields

   16 vardec: VAR ID ASSIGN exp
   17       | VAR ID COLON ID ASSIGN exp

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   19       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   20 fundecs: fundec
   21        | fundec fundecs

   22 lvalue: ID
   23       | lvalue DOT ID
   24       | ID LBRACK exp RBRACK
   25       | lvalue DOT ID LBRACK exp RBRACK

   26 exp: lvalue
   27    | BREAK
   28    | NIL
   29    | LPAREN explist RPAREN
   30    | INT
   31    | FLOAT
   32    | STRING
   33    | ID LPAREN RPAREN
   34    | ID LPAREN paras RPAREN

   35 paras: %empty
   36      | exp
   37      | exp COMMA paras

   38 exp: exp PLUS exp
   39    | exp MINUS exp
   40    | exp TIMES exp
   41    | exp DIVIDE exp
   42    | MINUS exp
   43    | exp EQ exp
   44    | exp NEQ exp
   45    | exp GT exp
   46    | exp LT exp
   47    | exp GE exp
   48    | exp LE exp
   49    | exp AND exp
   50    | exp OR exp
   51    | ID LBRACE efields RBRACE

   52 efields: %empty
   53        | ID EQ exp
   54        | ID EQ exp COMMA efields

   55 exp: ID LBRACK exp RBRACK OF exp
   56    | IF exp THEN exp ELSE exp
   57    | IF exp THEN exp
   58    | lvalue ASSIGN exp
   59    | WHILE exp DO exp
   60    | FOR ID ASSIGN exp TO exp DO exp
   61    | LET decs IN expseq END

   62 expseq: explist

   63 explist: %empty
   64        | exp
   65        | exp SEMICOLON explist

   66 exp: LPAREN expseq RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sval> (258) 7 10 12 14 15 16 17 18 19 22 23 24 25 33 34 51 53 54 55 60
    STRING <sval> (259) 32
    INT <ival> (260) 30
    FLOAT <fval> (261) 31
    COMMA (262) 15 37 54
    COLON (263) 14 15 17 19
    SEMICOLON (264) 65
    LPAREN (265) 18 19 29 33 34 66
    RPAREN (266) 18 19 29 33 34 66
    LBRACK (267) 24 25 55
    RBRACK (268) 24 25 55
    LBRACE (269) 11 51
    RBRACE (270) 11 51
    DOT (271) 23 25
    PLUS (272) 38
    MINUS (273) 39 42
    TIMES (274) 40
    DIVIDE (275) 41
    EQ (276) 7 18 19 43 53 54
    NEQ (277) 44
    LT (278) 46
    LE (279) 48
    GT (280) 45
    GE (281) 47
    AND (282) 49
    OR (283) 50
    ASSIGN (284) 16 17 58 60
    ARRAY (285) 12
    IF (286) 56 57
    THEN (287) 56 57
    ELSE (288) 56
    WHILE (289) 59
    FOR (290) 60
    TO (291) 60
    DO (292) 59 60
    LET (293) 61
    IN (294) 61
    END (295) 61
    OF (296) 12 55
    BREAK (297) 27
    NIL (298) 28
    FUNCTION (299) 18 19
    VAR (300) 16 17
    TYPE (301) 7
    UMINUS (302)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program <exp> (49)
        on left: 1
        on right: 0
    decs <decs> (50)
        on left: 2 3
        on right: 2 61
    dec <dec> (51)
        on left: 4 5 6
        on right: 2 3
    tydec <namety> (52)
        on left: 7
        on right: 8 9
    tydecs <nametys> (53)
        on left: 8 9
        on right: 4 9
    ty <ty> (54)
        on left: 10 11 12
        on right: 7
    tyfields <fields> (55)
        on left: 13 14 15
        on right: 11 15 18 19
    vardec <dec> (56)
        on left: 16 17
        on right: 5
    fundec <fundec> (57)
        on left: 18 19
        on right: 20 21
    fundecs <fundecs> (58)
        on left: 20 21
        on right: 6 21
    lvalue <var> (59)
        on left: 22 23 24 25
        on right: 23 25 26 58
    exp <exp> (60)
        on left: 26 27 28 29 30 31 32 33 34 38 39 40 41 42 43 44 45 46 47 48 49 50 51 55 56 57 58 59 60 61 66
        on right: 1 16 17 18 19 24 25 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 53 54 55 56 57 58 59 60 64 65
    paras <exps> (61)
        on left: 35 36 37
        on right: 34 37
    efields <efields> (62)
        on left: 52 53 54
        on right: 51 54
    expseq <exp> (63)
        on left: 62
        on right: 61 66
    explist <exps> (64)
        on left: 63 64 65
        on right: 29 62 65


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    program  go to state 13
    lvalue   go to state 14
    exp      go to state 15


State 1

   22 lvalue: ID .
   24       | ID . LBRACK exp RBRACK
   33 exp: ID . LPAREN RPAREN
   34    | ID . LPAREN paras RPAREN
   51    | ID . LBRACE efields RBRACE
   55    | ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 16
    LBRACK  shift, and go to state 17
    LBRACE  shift, and go to state 18

    $default  reduce using rule 22 (lvalue)


State 2

   32 exp: STRING .

    $default  reduce using rule 32 (exp)


State 3

   30 exp: INT .

    $default  reduce using rule 30 (exp)


State 4

   31 exp: FLOAT .

    $default  reduce using rule 31 (exp)


State 5

   29 exp: LPAREN . explist RPAREN
   66    | LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 63 (explist)

    lvalue   go to state 14
    exp      go to state 19
    expseq   go to state 20
    explist  go to state 21


State 6

   42 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 22


State 7

   56 exp: IF . exp THEN exp ELSE exp
   57    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 23


State 8

   59 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 24


State 9

   60 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 25


State 10

   61 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    decs     go to state 29
    dec      go to state 30
    tydec    go to state 31
    tydecs   go to state 32
    vardec   go to state 33
    fundec   go to state 34
    fundecs  go to state 35


State 11

   27 exp: BREAK .

    $default  reduce using rule 27 (exp)


State 12

   28 exp: NIL .

    $default  reduce using rule 28 (exp)


State 13

    0 $accept: program . $end

    $end  shift, and go to state 36


State 14

   23 lvalue: lvalue . DOT ID
   25       | lvalue . DOT ID LBRACK exp RBRACK
   26 exp: lvalue .
   58    | lvalue . ASSIGN exp

    DOT     shift, and go to state 37
    ASSIGN  shift, and go to state 38

    $default  reduce using rule 26 (exp)


State 15

    1 program: exp .
   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 1 (program)


State 16

   33 exp: ID LPAREN . RPAREN
   34    | ID LPAREN . paras RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 51
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    RPAREN  [reduce using rule 35 (paras)]

    lvalue  go to state 14
    exp     go to state 52
    paras   go to state 53


State 17

   24 lvalue: ID LBRACK . exp RBRACK
   55 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 54


State 18

   51 exp: ID LBRACE . efields RBRACE

    ID  shift, and go to state 55

    $default  reduce using rule 52 (efields)

    efields  go to state 56


State 19

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   64 explist: exp .
   65        | exp . SEMICOLON explist

    SEMICOLON  shift, and go to state 57
    PLUS       shift, and go to state 39
    MINUS      shift, and go to state 40
    TIMES      shift, and go to state 41
    DIVIDE     shift, and go to state 42
    EQ         shift, and go to state 43
    NEQ        shift, and go to state 44
    LT         shift, and go to state 45
    LE         shift, and go to state 46
    GT         shift, and go to state 47
    GE         shift, and go to state 48
    AND        shift, and go to state 49
    OR         shift, and go to state 50

    $default  reduce using rule 64 (explist)


State 20

   66 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 58


State 21

   29 exp: LPAREN explist . RPAREN
   62 expseq: explist .

    RPAREN  shift, and go to state 59

    RPAREN  [reduce using rule 62 (expseq)]


State 22

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   42    | MINUS exp .
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    $default  reduce using rule 42 (exp)


State 23

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   56    | IF exp . THEN exp ELSE exp
   57    | IF exp . THEN exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    THEN    shift, and go to state 60


State 24

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   59    | WHILE exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 61


State 25

   60 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 62


State 26

   18 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   19       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 63


State 27

   16 vardec: VAR . ID ASSIGN exp
   17       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 64


State 28

    7 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 65


State 29

   61 exp: LET decs . IN expseq END

    IN  shift, and go to state 66


State 30

    2 decs: dec . decs
    3     | dec .

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 3 (decs)

    decs     go to state 67
    dec      go to state 30
    tydec    go to state 31
    tydecs   go to state 32
    vardec   go to state 33
    fundec   go to state 34
    fundecs  go to state 35


State 31

    8 tydecs: tydec .
    9       | tydec . tydecs

    TYPE  shift, and go to state 28

    TYPE      [reduce using rule 8 (tydecs)]
    $default  reduce using rule 8 (tydecs)

    tydec   go to state 31
    tydecs  go to state 68


State 32

    4 dec: tydecs .

    $default  reduce using rule 4 (dec)


State 33

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


State 34

   20 fundecs: fundec .
   21        | fundec . fundecs

    FUNCTION  shift, and go to state 26

    FUNCTION  [reduce using rule 20 (fundecs)]
    $default  reduce using rule 20 (fundecs)

    fundec   go to state 34
    fundecs  go to state 69


State 35

    6 dec: fundecs .

    $default  reduce using rule 6 (dec)


State 36

    0 $accept: program $end .

    $default  accept


State 37

   23 lvalue: lvalue DOT . ID
   25       | lvalue DOT . ID LBRACK exp RBRACK

    ID  shift, and go to state 70


State 38

   58 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 71


State 39

   38 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 72


State 40

   39 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 73


State 41

   40 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 74


State 42

   41 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 75


State 43

   43 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 76


State 44

   44 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 77


State 45

   46 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 78


State 46

   48 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 79


State 47

   45 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 80


State 48

   47 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 81


State 49

   49 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 82


State 50

   50 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 83


State 51

   33 exp: ID LPAREN RPAREN .

    $default  reduce using rule 33 (exp)


State 52

   36 paras: exp .
   37      | exp . COMMA paras
   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    COMMA   shift, and go to state 84
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 36 (paras)


State 53

   34 exp: ID LPAREN paras . RPAREN

    RPAREN  shift, and go to state 85


State 54

   24 lvalue: ID LBRACK exp . RBRACK
   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   55    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 86
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 55

   53 efields: ID . EQ exp
   54        | ID . EQ exp COMMA efields

    EQ  shift, and go to state 87


State 56

   51 exp: ID LBRACE efields . RBRACE

    RBRACE  shift, and go to state 88


State 57

   65 explist: exp SEMICOLON . explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 63 (explist)

    lvalue   go to state 14
    exp      go to state 19
    explist  go to state 89


State 58

   66 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 66 (exp)


State 59

   29 exp: LPAREN explist RPAREN .

    $default  reduce using rule 29 (exp)


State 60

   56 exp: IF exp THEN . exp ELSE exp
   57    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 90


State 61

   59 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 91


State 62

   60 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 92


State 63

   18 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   19       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 93


State 64

   16 vardec: VAR ID . ASSIGN exp
   17       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 94
    ASSIGN  shift, and go to state 95


State 65

    7 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 96


State 66

   61 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 63 (explist)

    lvalue   go to state 14
    exp      go to state 19
    expseq   go to state 97
    explist  go to state 98


State 67

    2 decs: dec decs .

    $default  reduce using rule 2 (decs)


State 68

    9 tydecs: tydec tydecs .

    $default  reduce using rule 9 (tydecs)


State 69

   21 fundecs: fundec fundecs .

    $default  reduce using rule 21 (fundecs)


State 70

   23 lvalue: lvalue DOT ID .
   25       | lvalue DOT ID . LBRACK exp RBRACK

    LBRACK  shift, and go to state 99

    $default  reduce using rule 23 (lvalue)


State 71

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   58    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 58 (exp)


State 72

   38 exp: exp . PLUS exp
   38    | exp PLUS exp .
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 38 (exp)


State 73

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   39    | exp MINUS exp .
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 39 (exp)


State 74

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   40    | exp TIMES exp .
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    $default  reduce using rule 40 (exp)


State 75

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   41    | exp DIVIDE exp .
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    $default  reduce using rule 41 (exp)


State 76

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   43    | exp EQ exp .
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 43 (exp)


State 77

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   44    | exp NEQ exp .
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 44 (exp)


State 78

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   46    | exp LT exp .
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 46 (exp)


State 79

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   48    | exp LE exp .
   49    | exp . AND exp
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 48 (exp)


State 80

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   45    | exp GT exp .
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 45 (exp)


State 81

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   47    | exp GE exp .
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 47 (exp)


State 82

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   49    | exp AND exp .
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48

    $default  reduce using rule 49 (exp)


State 83

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   50    | exp OR exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49

    $default  reduce using rule 50 (exp)


State 84

   37 paras: exp COMMA . paras

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 35 (paras)

    lvalue  go to state 14
    exp     go to state 52
    paras   go to state 100


State 85

   34 exp: ID LPAREN paras RPAREN .

    $default  reduce using rule 34 (exp)


State 86

   24 lvalue: ID LBRACK exp RBRACK .
   55 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 101

    $default  reduce using rule 24 (lvalue)


State 87

   53 efields: ID EQ . exp
   54        | ID EQ . exp COMMA efields

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 102


State 88

   51 exp: ID LBRACE efields RBRACE .

    $default  reduce using rule 51 (exp)


State 89

   65 explist: exp SEMICOLON explist .

    $default  reduce using rule 65 (explist)


State 90

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   56    | IF exp THEN exp . ELSE exp
   57    | IF exp THEN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    ELSE    shift, and go to state 103

    $default  reduce using rule 57 (exp)


State 91

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   59    | WHILE exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 59 (exp)


State 92

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   60    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    TO      shift, and go to state 104


State 93

   18 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   19       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 105

    $default  reduce using rule 13 (tyfields)

    tyfields  go to state 106


State 94

   17 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 107


State 95

   16 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 108


State 96

    7 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 109
    LBRACE  shift, and go to state 110
    ARRAY   shift, and go to state 111

    ty  go to state 112


State 97

   61 exp: LET decs IN expseq . END

    END  shift, and go to state 113


State 98

   62 expseq: explist .

    $default  reduce using rule 62 (expseq)


State 99

   25 lvalue: lvalue DOT ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 114


State 100

   37 paras: exp COMMA paras .

    $default  reduce using rule 37 (paras)


State 101

   55 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 115


State 102

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   53 efields: ID EQ exp .
   54        | ID EQ exp . COMMA efields

    COMMA   shift, and go to state 116
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 53 (efields)


State 103

   56 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 117


State 104

   60 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 118


State 105

   14 tyfields: ID . COLON ID
   15         | ID . COLON ID COMMA tyfields

    COLON  shift, and go to state 119


State 106

   18 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   19       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 120


State 107

   17 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 121


State 108

   16 vardec: VAR ID ASSIGN exp .
   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 16 (vardec)


State 109

   10 ty: ID .

    $default  reduce using rule 10 (ty)


State 110

   11 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 105

    $default  reduce using rule 13 (tyfields)

    tyfields  go to state 122


State 111

   12 ty: ARRAY . OF ID

    OF  shift, and go to state 123


State 112

    7 tydec: TYPE ID EQ ty .

    $default  reduce using rule 7 (tydec)


State 113

   61 exp: LET decs IN expseq END .

    $default  reduce using rule 61 (exp)


State 114

   25 lvalue: lvalue DOT ID LBRACK exp . RBRACK
   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    RBRACK  shift, and go to state 124
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 115

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   55    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 55 (exp)


State 116

   54 efields: ID EQ exp COMMA . efields

    ID  shift, and go to state 55

    $default  reduce using rule 52 (efields)

    efields  go to state 125


State 117

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   56    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 56 (exp)


State 118

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   60    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 126


State 119

   14 tyfields: ID COLON . ID
   15         | ID COLON . ID COMMA tyfields

    ID  shift, and go to state 127


State 120

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   19       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 128
    EQ     shift, and go to state 129


State 121

   17 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 130


State 122

   11 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 131


State 123

   12 ty: ARRAY OF . ID

    ID  shift, and go to state 132


State 124

   25 lvalue: lvalue DOT ID LBRACK exp RBRACK .

    $default  reduce using rule 25 (lvalue)


State 125

   54 efields: ID EQ exp COMMA efields .

    $default  reduce using rule 54 (efields)


State 126

   60 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 133


State 127

   14 tyfields: ID COLON ID .
   15         | ID COLON ID . COMMA tyfields

    COMMA  shift, and go to state 134

    $default  reduce using rule 14 (tyfields)


State 128

   19 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 135


State 129

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 136


State 130

   17 vardec: VAR ID COLON ID ASSIGN exp .
   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 17 (vardec)


State 131

   11 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 11 (ty)


State 132

   12 ty: ARRAY OF ID .

    $default  reduce using rule 12 (ty)


State 133

   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp
   60    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 60 (exp)


State 134

   15 tyfields: ID COLON ID COMMA . tyfields

    ID  shift, and go to state 105

    $default  reduce using rule 13 (tyfields)

    tyfields  go to state 137


State 135

   19 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 138


State 136

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .
   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 18 (fundec)


State 137

   15 tyfields: ID COLON ID COMMA tyfields .

    $default  reduce using rule 15 (tyfields)


State 138

   19 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    lvalue  go to state 14
    exp     go to state 139


State 139

   19 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .
   38 exp: exp . PLUS exp
   39    | exp . MINUS exp
   40    | exp . TIMES exp
   41    | exp . DIVIDE exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . GT exp
   46    | exp . LT exp
   47    | exp . GE exp
   48    | exp . LE exp
   49    | exp . AND exp
   50    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 19 (fundec)
