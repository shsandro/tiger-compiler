Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | BREAK
    4    | NIL
    5    | LPAREN explist RPAREN
    6    | INT
    7    | FLOAT
    8    | STRING
    9    | ID LPAREN paras RPAREN
   10    | exp PLUS exp
   11    | exp MINUS exp
   12    | exp TIMES exp
   13    | exp DIVIDE exp
   14    | MINUS exp
   15    | exp EQ exp
   16    | exp NEQ exp
   17    | exp GT exp
   18    | exp LT exp
   19    | exp GE exp
   20    | exp LE exp
   21    | exp AND exp
   22    | exp OR exp
   23    | ID LBRACE efields RBRACE
   24    | ID LBRACK exp RBRACK OF exp
   25    | IF exp THEN exp ELSE exp
   26    | IF exp THEN exp
   27    | lvalue ASSIGN exp
   28    | WHILE exp DO exp
   29    | FOR ID ASSIGN exp TO exp DO exp
   30    | LET decs IN explist END

   31 decs: dec decs
   32     | dec

   33 dec: tydecs
   34    | vardec
   35    | fundecs

   36 tydec: TYPE ID EQ ty

   37 tydecs: tydec
   38       | tydec tydecs

   39 ty: ID
   40   | LBRACE tyfields RBRACE
   41   | ARRAY OF ID

   42 tyfields: %empty
   43         | ID COLON ID
   44         | ID COLON ID COMMA tyfields

   45 vardec: VAR ID ASSIGN exp
   46       | VAR ID COLON ID ASSIGN exp

   47 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   48       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   49 fundecs: fundec
   50        | fundec fundecs

   51 lvalue: ID
   52       | lvalue DOT ID
   53       | lvalue LBRACK exp RBRACK
   54       | ID LBRACK exp RBRACK
   55       | lvalue DOT ID LBRACK exp RBRACK

   56 paras: %empty
   57      | exp
   58      | exp COMMA paras

   59 efields: %empty
   60        | ID EQ exp
   61        | ID EQ exp COMMA efields

   62 explist: %empty
   63        | exp
   64        | exp SEMICOLON explist


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sval> (258) 9 23 24 29 36 39 41 43 44 45 46 47 48 51 52 54 55 60 61
    STRING <sval> (259) 8
    INT <ival> (260) 6
    FLOAT <fval> (261) 7
    COMMA (262) 44 58 61
    COLON (263) 43 44 46 48
    SEMICOLON (264) 64
    LPAREN (265) 5 9 47 48
    RPAREN (266) 5 9 47 48
    LBRACK (267) 24 53 54 55
    RBRACK (268) 24 53 54 55
    LBRACE (269) 23 40
    RBRACE (270) 23 40
    DOT (271) 52 55
    PLUS (272) 10
    MINUS (273) 11 14
    TIMES (274) 12
    DIVIDE (275) 13
    EQ (276) 15 36 47 48 60 61
    NEQ (277) 16
    LT (278) 18
    LE (279) 20
    GT (280) 17
    GE (281) 19
    AND (282) 21
    OR (283) 22
    ASSIGN (284) 27 29 45 46
    ARRAY (285) 41
    IF (286) 25 26
    THEN (287) 25 26
    ELSE (288) 25
    WHILE (289) 28
    FOR (290) 29
    TO (291) 29
    DO (292) 28 29
    LET (293) 30
    IN (294) 30
    END (295) 30
    OF (296) 24 41
    BREAK (297) 3
    NIL (298) 4
    FUNCTION (299) 47 48
    VAR (300) 45 46
    TYPE (301) 36
    LOW (302)
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program <exp> (50)
        on left: 1
        on right: 0
    exp <exp> (51)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 1 10 11 12 13 14 15 16 17 18 19 20 21 22 24 25 26 27 28 29 45 46 47 48 53 54 55 57 58 60 61 63 64
    decs <decs> (52)
        on left: 31 32
        on right: 30 31
    dec <dec> (53)
        on left: 33 34 35
        on right: 31 32
    tydec <namety> (54)
        on left: 36
        on right: 37 38
    tydecs <nametys> (55)
        on left: 37 38
        on right: 33 38
    ty <ty> (56)
        on left: 39 40 41
        on right: 36
    tyfields <fields> (57)
        on left: 42 43 44
        on right: 40 44 47 48
    vardec <dec> (58)
        on left: 45 46
        on right: 34
    fundec <fundec> (59)
        on left: 47 48
        on right: 49 50
    fundecs <fundecs> (60)
        on left: 49 50
        on right: 35 50
    lvalue <var> (61)
        on left: 51 52 53 54 55
        on right: 2 27 52 53 55
    paras <exps> (62)
        on left: 56 57 58
        on right: 9 58
    efields <efields> (63)
        on left: 59 60 61
        on right: 23 61
    explist <exps> (64)
        on left: 62 63 64
        on right: 5 30 64


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    program  go to state 13
    exp      go to state 14
    lvalue   go to state 15


State 1

    9 exp: ID . LPAREN paras RPAREN
   23    | ID . LBRACE efields RBRACE
   24    | ID . LBRACK exp RBRACK OF exp
   51 lvalue: ID .
   54       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 16
    LBRACK  shift, and go to state 17
    LBRACE  shift, and go to state 18

    $default  reduce using rule 51 (lvalue)


State 2

    8 exp: STRING .

    $default  reduce using rule 8 (exp)


State 3

    6 exp: INT .

    $default  reduce using rule 6 (exp)


State 4

    7 exp: FLOAT .

    $default  reduce using rule 7 (exp)


State 5

    5 exp: LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 62 (explist)

    exp      go to state 19
    lvalue   go to state 15
    explist  go to state 20


State 6

   14 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 21
    lvalue  go to state 15


State 7

   25 exp: IF . exp THEN exp ELSE exp
   26    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 22
    lvalue  go to state 15


State 8

   28 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 23
    lvalue  go to state 15


State 9

   29 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 24


State 10

   30 exp: LET . decs IN explist END

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    decs     go to state 28
    dec      go to state 29
    tydec    go to state 30
    tydecs   go to state 31
    vardec   go to state 32
    fundec   go to state 33
    fundecs  go to state 34


State 11

    3 exp: BREAK .

    $default  reduce using rule 3 (exp)


State 12

    4 exp: NIL .

    $default  reduce using rule 4 (exp)


State 13

    0 $accept: program . $end

    $end  shift, and go to state 35


State 14

    1 program: exp .
   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 1 (program)


State 15

    2 exp: lvalue .
   27    | lvalue . ASSIGN exp
   52 lvalue: lvalue . DOT ID
   53       | lvalue . LBRACK exp RBRACK
   55       | lvalue . DOT ID LBRACK exp RBRACK

    LBRACK  shift, and go to state 48
    DOT     shift, and go to state 49
    ASSIGN  shift, and go to state 50

    $default  reduce using rule 2 (exp)


State 16

    9 exp: ID LPAREN . paras RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 56 (paras)

    exp     go to state 51
    lvalue  go to state 15
    paras   go to state 52


State 17

   24 exp: ID LBRACK . exp RBRACK OF exp
   54 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 53
    lvalue  go to state 15


State 18

   23 exp: ID LBRACE . efields RBRACE

    ID  shift, and go to state 54

    $default  reduce using rule 59 (efields)

    efields  go to state 55


State 19

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   63 explist: exp .
   64        | exp . SEMICOLON explist

    SEMICOLON  shift, and go to state 56
    PLUS       shift, and go to state 36
    MINUS      shift, and go to state 37
    TIMES      shift, and go to state 38
    DIVIDE     shift, and go to state 39
    EQ         shift, and go to state 40
    NEQ        shift, and go to state 41
    LT         shift, and go to state 42
    LE         shift, and go to state 43
    GT         shift, and go to state 44
    GE         shift, and go to state 45
    AND        shift, and go to state 46
    OR         shift, and go to state 47

    $default  reduce using rule 63 (explist)


State 20

    5 exp: LPAREN explist . RPAREN

    RPAREN  shift, and go to state 57


State 21

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | MINUS exp .
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    $default  reduce using rule 14 (exp)


State 22

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   25    | IF exp . THEN exp ELSE exp
   26    | IF exp . THEN exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    THEN    shift, and go to state 58


State 23

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   28    | WHILE exp . DO exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    DO      shift, and go to state 59


State 24

   29 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 60


State 25

   47 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   48       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 61


State 26

   45 vardec: VAR . ID ASSIGN exp
   46       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 62


State 27

   36 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 63


State 28

   30 exp: LET decs . IN explist END

    IN  shift, and go to state 64


State 29

   31 decs: dec . decs
   32     | dec .

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    $default  reduce using rule 32 (decs)

    decs     go to state 65
    dec      go to state 29
    tydec    go to state 30
    tydecs   go to state 31
    vardec   go to state 32
    fundec   go to state 33
    fundecs  go to state 34


State 30

   37 tydecs: tydec .
   38       | tydec . tydecs

    TYPE  shift, and go to state 27

    $default  reduce using rule 37 (tydecs)

    tydec   go to state 30
    tydecs  go to state 66


State 31

   33 dec: tydecs .

    $default  reduce using rule 33 (dec)


State 32

   34 dec: vardec .

    $default  reduce using rule 34 (dec)


State 33

   49 fundecs: fundec .
   50        | fundec . fundecs

    FUNCTION  shift, and go to state 25

    $default  reduce using rule 49 (fundecs)

    fundec   go to state 33
    fundecs  go to state 67


State 34

   35 dec: fundecs .

    $default  reduce using rule 35 (dec)


State 35

    0 $accept: program $end .

    $default  accept


State 36

   10 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 68
    lvalue  go to state 15


State 37

   11 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 69
    lvalue  go to state 15


State 38

   12 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 70
    lvalue  go to state 15


State 39

   13 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 71
    lvalue  go to state 15


State 40

   15 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 72
    lvalue  go to state 15


State 41

   16 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 73
    lvalue  go to state 15


State 42

   18 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 74
    lvalue  go to state 15


State 43

   20 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 75
    lvalue  go to state 15


State 44

   17 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 76
    lvalue  go to state 15


State 45

   19 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 77
    lvalue  go to state 15


State 46

   21 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 78
    lvalue  go to state 15


State 47

   22 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 79
    lvalue  go to state 15


State 48

   53 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 80
    lvalue  go to state 15


State 49

   52 lvalue: lvalue DOT . ID
   55       | lvalue DOT . ID LBRACK exp RBRACK

    ID  shift, and go to state 81


State 50

   27 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 82
    lvalue  go to state 15


State 51

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   57 paras: exp .
   58      | exp . COMMA paras

    COMMA   shift, and go to state 83
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 57 (paras)


State 52

    9 exp: ID LPAREN paras . RPAREN

    RPAREN  shift, and go to state 84


State 53

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   24    | ID LBRACK exp . RBRACK OF exp
   54 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 85
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47


State 54

   60 efields: ID . EQ exp
   61        | ID . EQ exp COMMA efields

    EQ  shift, and go to state 86


State 55

   23 exp: ID LBRACE efields . RBRACE

    RBRACE  shift, and go to state 87


State 56

   64 explist: exp SEMICOLON . explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 62 (explist)

    exp      go to state 19
    lvalue   go to state 15
    explist  go to state 88


State 57

    5 exp: LPAREN explist RPAREN .

    $default  reduce using rule 5 (exp)


State 58

   25 exp: IF exp THEN . exp ELSE exp
   26    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 89
    lvalue  go to state 15


State 59

   28 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 90
    lvalue  go to state 15


State 60

   29 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 91
    lvalue  go to state 15


State 61

   47 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   48       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 92


State 62

   45 vardec: VAR ID . ASSIGN exp
   46       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 93
    ASSIGN  shift, and go to state 94


State 63

   36 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 95


State 64

   30 exp: LET decs IN . explist END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 62 (explist)

    exp      go to state 19
    lvalue   go to state 15
    explist  go to state 96


State 65

   31 decs: dec decs .

    $default  reduce using rule 31 (decs)


State 66

   38 tydecs: tydec tydecs .

    $default  reduce using rule 38 (tydecs)


State 67

   50 fundecs: fundec fundecs .

    $default  reduce using rule 50 (fundecs)


State 68

   10 exp: exp . PLUS exp
   10    | exp PLUS exp .
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    $default  reduce using rule 10 (exp)


State 69

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   11    | exp MINUS exp .
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    $default  reduce using rule 11 (exp)


State 70

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   12    | exp TIMES exp .
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    $default  reduce using rule 12 (exp)


State 71

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   13    | exp DIVIDE exp .
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    $default  reduce using rule 13 (exp)


State 72

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   15    | exp EQ exp .
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


State 73

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   16    | exp NEQ exp .
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 74

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   18    | exp LT exp .
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 75

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   20    | exp LE exp .
   21    | exp . AND exp
   22    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (exp)


State 76

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   17    | exp GT exp .
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


State 77

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   19    | exp GE exp .
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


State 78

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   21    | exp AND exp .
   22    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45

    $default  reduce using rule 21 (exp)


State 79

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   22    | exp OR exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46

    $default  reduce using rule 22 (exp)


State 80

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   53 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 97
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47


State 81

   52 lvalue: lvalue DOT ID .
   55       | lvalue DOT ID . LBRACK exp RBRACK

    LBRACK  shift, and go to state 98

    $default  reduce using rule 52 (lvalue)


State 82

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   27    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 27 (exp)


State 83

   58 paras: exp COMMA . paras

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 56 (paras)

    exp     go to state 51
    lvalue  go to state 15
    paras   go to state 99


State 84

    9 exp: ID LPAREN paras RPAREN .

    $default  reduce using rule 9 (exp)


State 85

   24 exp: ID LBRACK exp RBRACK . OF exp
   54 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 100

    $default  reduce using rule 54 (lvalue)


State 86

   60 efields: ID EQ . exp
   61        | ID EQ . exp COMMA efields

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 101
    lvalue  go to state 15


State 87

   23 exp: ID LBRACE efields RBRACE .

    $default  reduce using rule 23 (exp)


State 88

   64 explist: exp SEMICOLON explist .

    $default  reduce using rule 64 (explist)


State 89

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   25    | IF exp THEN exp . ELSE exp
   26    | IF exp THEN exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    ELSE    shift, and go to state 102

    $default  reduce using rule 26 (exp)


State 90

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   28    | WHILE exp DO exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 28 (exp)


State 91

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   29    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    TO      shift, and go to state 103


State 92

   47 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   48       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 104

    $default  reduce using rule 42 (tyfields)

    tyfields  go to state 105


State 93

   46 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 106


State 94

   45 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 107
    lvalue  go to state 15


State 95

   36 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 108
    LBRACE  shift, and go to state 109
    ARRAY   shift, and go to state 110

    ty  go to state 111


State 96

   30 exp: LET decs IN explist . END

    END  shift, and go to state 112


State 97

   53 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 53 (lvalue)


State 98

   55 lvalue: lvalue DOT ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 113
    lvalue  go to state 15


State 99

   58 paras: exp COMMA paras .

    $default  reduce using rule 58 (paras)


State 100

   24 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 114
    lvalue  go to state 15


State 101

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   60 efields: ID EQ exp .
   61        | ID EQ exp . COMMA efields

    COMMA   shift, and go to state 115
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 60 (efields)


State 102

   25 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 116
    lvalue  go to state 15


State 103

   29 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 117
    lvalue  go to state 15


State 104

   43 tyfields: ID . COLON ID
   44         | ID . COLON ID COMMA tyfields

    COLON  shift, and go to state 118


State 105

   47 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   48       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 119


State 106

   46 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 120


State 107

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   45 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 45 (vardec)


State 108

   39 ty: ID .

    $default  reduce using rule 39 (ty)


State 109

   40 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 104

    $default  reduce using rule 42 (tyfields)

    tyfields  go to state 121


State 110

   41 ty: ARRAY . OF ID

    OF  shift, and go to state 122


State 111

   36 tydec: TYPE ID EQ ty .

    $default  reduce using rule 36 (tydec)


State 112

   30 exp: LET decs IN explist END .

    $default  reduce using rule 30 (exp)


State 113

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   55 lvalue: lvalue DOT ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 123
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47


State 114

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   24    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 24 (exp)


State 115

   61 efields: ID EQ exp COMMA . efields

    ID  shift, and go to state 54

    $default  reduce using rule 59 (efields)

    efields  go to state 124


State 116

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   25    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 25 (exp)


State 117

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   29    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    DO      shift, and go to state 125


State 118

   43 tyfields: ID COLON . ID
   44         | ID COLON . ID COMMA tyfields

    ID  shift, and go to state 126


State 119

   47 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   48       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 127
    EQ     shift, and go to state 128


State 120

   46 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 129
    lvalue  go to state 15


State 121

   40 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 130


State 122

   41 ty: ARRAY OF . ID

    ID  shift, and go to state 131


State 123

   55 lvalue: lvalue DOT ID LBRACK exp RBRACK .

    $default  reduce using rule 55 (lvalue)


State 124

   61 efields: ID EQ exp COMMA efields .

    $default  reduce using rule 61 (efields)


State 125

   29 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 132
    lvalue  go to state 15


State 126

   43 tyfields: ID COLON ID .
   44         | ID COLON ID . COMMA tyfields

    COMMA  shift, and go to state 133

    $default  reduce using rule 43 (tyfields)


State 127

   48 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 134


State 128

   47 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 135
    lvalue  go to state 15


State 129

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   46 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 46 (vardec)


State 130

   40 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 40 (ty)


State 131

   41 ty: ARRAY OF ID .

    $default  reduce using rule 41 (ty)


State 132

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   29    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 29 (exp)


State 133

   44 tyfields: ID COLON ID COMMA . tyfields

    ID  shift, and go to state 104

    $default  reduce using rule 42 (tyfields)

    tyfields  go to state 136


State 134

   48 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 137


State 135

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   47 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 47 (fundec)


State 136

   44 tyfields: ID COLON ID COMMA tyfields .

    $default  reduce using rule 44 (tyfields)


State 137

   48 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp     go to state 138
    lvalue  go to state 15


State 138

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   15    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   48 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 48 (fundec)
